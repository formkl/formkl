import Formkl from "formkl";

import fs from "fs";
import path from "path";

export interface PluginDtsOptions {
  dir?: string;
}

export interface PluginOptions {
  extenstion?: string;
  /**
   * @default false
   */
  dts?: boolean | PluginDtsOptions;
}

export class FormklWebpackPlugin {
  constructor(private options?: PluginOptions) {}

  apply(compiler: any) {
    compiler.hooks.emit.tapAsync("FormklWebpackPlugin", (compilation: any, callback: any) => {
      const declaration = `// Generated by '@formkl/plugin-webpack'
import type { Formkl } from "@formkl/shared";\n
declare module "*.form" {
	const form: Formkl;
	export default form;
}`;
      const dts = this.options?.dts || false;
      if (dts !== false || (dts as any)?.dir) {
        fs.writeFile(
          path.resolve((dts as any)?.dir || "./", "form-shim.d.ts"),
          declaration,
          (err: any) => {
            if (err) throw err;
          },
        );
      }

      callback();
    });
  }
}

export default function (source: string, options?: PluginOptions) {
  const form = Formkl.parse(source);

  return `export default ${JSON.stringify(form)}`;
}
