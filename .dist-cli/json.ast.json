{
  "lex": {
    "macros": {
      "DIGIT": "[0-9]",
      "ESC": "\\\\",
      "INT": "-?(?:[0-9]|[1-9][0-9]+)",
      "EXP": "(?:[eE][-+]?[0-9]+)",
      "FRAC": "(?:\\.[0-9]+)"
    },
    "rules": [
      [
        "\\s+",
        "/* skip whitespace */"
      ],
      [
        "\\(",
        "return '(';"
      ],
      [
        "\\)",
        "return ')';"
      ],
      [
        "\\{",
        "return '{';"
      ],
      [
        "\\}",
        "return '}';"
      ],
      [
        "\\[",
        "return '[';"
      ],
      [
        "\\]",
        "return ']';"
      ],
      [
        "\\,",
        "return ',';"
      ],
      [
        "\\:",
        "return ':';"
      ],
      [
        "true",
        "return 'true';"
      ],
      [
        "false",
        "return 'false';"
      ],
      [
        "null",
        "return 'null';"
      ],
      [
        "{INT}{FRAC}?{EXP}?\\b",
        "return 'number';"
      ],
      [
        "\"(?:{ESC}[\"bfnrt/{ESC}]|{ESC}u[a-fA-F0-9]{4}|[^\"{ESC}])*\"",
        "yytext = yytext.substr(1,yyleng-2);return 'string';"
      ],
      [
        "valid",
        "return 'valid';"
      ],
      [
        "regex",
        "return 'regex';"
      ],
      [
        "require",
        "return 'require';"
      ],
      [
        "text",
        "return 'field';"
      ],
      [
        "paragraph",
        "return 'field';"
      ],
      [
        "number",
        "return 'field';"
      ],
      [
        "checkbox",
        "return 'field';"
      ],
      [
        "radio",
        "return 'field';"
      ],
      [
        "dropdown",
        "return 'field';"
      ],
      [
        "email",
        "return 'field';"
      ],
      [
        "zip",
        "return 'field';"
      ],
      [
        "age",
        "return 'field';"
      ],
      [
        "date",
        "return 'field';"
      ],
      [
        "future date",
        "return 'field';"
      ],
      [
        "past date",
        "return 'field';"
      ],
      [
        "birthday",
        "return 'field';"
      ],
      [
        "time",
        "return 'field';"
      ],
      [
        "datetime",
        "return 'field';"
      ],
      [
        "date range",
        "return 'field';"
      ],
      [
        "datetime range",
        "return 'field';"
      ],
      [
        "time range",
        "return 'field';"
      ],
      [
        "US phone",
        "return 'field';"
      ],
      [
        "VN phone",
        "return 'field';"
      ]
    ]
  },
  "tokens": "string number ( ) { } [ ] , : true false null valid regex require field",
  "start": "JSONText",
  "bnf": {
    "JSONText": [
      [
        "JSONValue",
        "return $$ = $1;"
      ]
    ],
    "JSONValue": [
      [
        "JSONNullLiteral",
        "$$ = $1;"
      ],
      [
        "JSONBooleanLiteral",
        "$$ = $1;"
      ],
      [
        "JSONString",
        "$$ = $1;"
      ],
      [
        "JSONNumber",
        "$$ = $1;"
      ],
      [
        "JSONObject",
        "$$ = $1;"
      ],
      [
        "JSONArray",
        "$$ = $1;"
      ]
    ],
    "JSONNullLiteral": [
      [
        "null",
        "$$ = null;"
      ]
    ],
    "JSONBooleanLiteral": [
      [
        "true",
        "$$ = true;"
      ],
      [
        "false",
        "$$ = false;"
      ]
    ],
    "JSONString": [
      [
        "string",
        "$$ = yytext;"
      ]
    ],
    "JSONNumber": [
      [
        "number",
        "$$ = Number(yytext);"
      ]
    ],
    "JSONObject": [
      [
        "{ }",
        "$$ = {};"
      ],
      [
        "{ JSONMemberList }",
        "$$ = $2;"
      ]
    ],
    "JSONArray": [
      [
        "[ ]",
        "$$ = [];"
      ],
      [
        "[ JSONElementList ]",
        "$$ = $2;"
      ]
    ],
    "JSONElementList": [
      [
        "JSONValue",
        "$$ = [$1];"
      ],
      [
        "JSONElementList , JSONValue",
        "$$ = $1; $1.push($3);"
      ]
    ],
    "JSONMemberList": [
      [
        "JSONMember",
        "$$ = {}; $$[$1[0]] = $1[1];"
      ],
      [
        "JSONMemberList , JSONMember",
        "$$ = $1; $1[$3[0]] = $3[1];"
      ]
    ],
    "JSONMember": [
      [
        "JSONString : JSONValue",
        "$$ = [$1, $3];"
      ]
    ]
  }
}